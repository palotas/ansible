---
- hosts: all
  remote_user: e34
  become: yes
  become_method: sudo
  tasks:
   - name: updates a server
     apt: update_cache=yes

   - name: uninstall libre office (1)
     apt: name=libreoffice* state=absent purge=true

   - name: install java8
     apt: name=openjdk-8-jdk state=latest install_recommends=no

   - name: download IntelliJ
     get_url: url=http://download.jetbrains.com/idea/ideaIC-2016.2.1.tar.gz dest=/home/e34/Downloads/ideaC-2016.2.1.tar.gz
     

   - name: unzip downloaded IntelliJ file
     shell: tar xfz /home/e34/Downloads/ideaC-2016.2.1.tar.gz

   - name: install git
     apt: name=git

   - name: create Workspace directorysl
     file: path=/home/e34/Workspace/Seleniumtraining state=directory owner=e34 mode=0755

   - name: clone git repo
     git: repo=https://github.com/palotas/e34seleniumtraining.git dest=/home/e34/Workspace/Seleniumtraining

   - name: install maven3
     apt: name=maven

   - name: download selenium
     get_url: url=http://goo.gl/IHP6Qw dest=/home/e34/Downloads/selenium-server-standalone-latest.jar

    # Unarchive a file that needs to be downloaded (added in 2.0)
   - name: unarchive chromedriver
     unarchive: src=http://chromedriver.storage.googleapis.com/2.21/chromedriver_linux64.zip dest=/home/e34/Downloads copy=no

   - name: change owner of chromedriver to 34
     file: path=/home/e34/Downloads/chromedriver owner=e34 mode=0755

   - name: install Google Chrome (1)
     shell: wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb

   - name: install Google Chrome (2)
     shell: sudo apt-get -f install

   - name: install libappindicator1 (needed for next step)
     apt: name=libappindicator1

   - name: dpkg
     shell: sudo dpkg -i google-chrome-stable_current_amd64.deb

   #- name: install apt-transport-https
   #  apt: name=apt-transport-https

   #- name: install ca-certificates
   #  apt: name=ca-certificates


   #- name: add to docker dist
   #  shell: apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D

   #- name: create file for docker
   #  file: path=/etc/apt/sources.list.d/docker.list state=touch

   #- name: copy content to file
   #  copy: content="deb https://apt.dockerproject.org/repo ubuntu-wily main" dest="/etc/apt/sources.list.d/docker.list"

   #- name: updates server
   #  apt: update_cache=yes

   #- name: purge
   #  shell: sudo apt-get purge lxc-docker

   #- name: verify apt
   #  shell: apt-cache policy docker-engine


   #- name: install docker
   #  apt: name=docker-engine

   #- name: install pip
   #  apt: name=python-pip

   #- name: install docker-py
   #  pip: name=docker-py


   # download Dockerfile and plugins.txt from S3 and place into /home/e34/docker
   #- name: create directory "docker"
   #  file: path=/home/e34/docker state=directory mode=0755

   #- name: download Dockerfile and plugins.txt from Github
   #  get_url: url=https://raw.githubusercontent.com/palotas/ansible/master/docker/Dockerfile dest=/home/e34/docker/Dockerfile mode=0777 force=yes
   #- name: change ownership of Dockerfile
   #  file: path=/home/e34/docker/Dockerfile owner=e34 mode=0755


   #- name: download plugins.txt from Github
   #  get_url: url=https://raw.githubusercontent.com/palotas/ansible/master/docker/plugins.txt dest=/home/e34/docker/plugins.txt mode=0777 force=yes
   #- name: change ownership of plugins.txt
   #  file: path=/home/e34/docker/plugins.txt owner=e34 mode=0755


   # create job directory for cdi_unittests
   #- name: create directory for cdi_unittests
   #  file: path=/home/e34/jenkins_home/jobs/cdi_unittests state=directory mode=0755


   # copy jenkins job into host directory: /home/e34/jenkins_home/jobs/cdi_unittests
   #- name: download jenkins unit test job xml from amazon
   #  get_url: url=https://s3-us-west-2.amazonaws.com/gridfusionvm/config.xml dest=/home/e34/jenkins_home/jobs/cdi_unittests/config.xml mode=0777


   #- name: build the jenkins image from the Dockerfile
   #  docker_image: >
   #     name=e34-jenkins
   #     path=/home/e34/docker
   #     state=present

   #- name: stop jenkins docker container
   #  docker:
   #      name: e34-jenkins
   #      image: jenkins
   #      state: stopped


   #- name: create /home/e34/jenkins_home directory on host
   #  file: path=/home/e34/jenkins_home state=directory mode=0777


   #- name: start jenkins docker container
   #  docker:
   #      name: e34-jenkins
   #      image: e34-jenkins
   #      ports: "8080:8080"
   #      state: started
   #      volumes: /home/e34/jenkins_home:/var/jenkins_home



